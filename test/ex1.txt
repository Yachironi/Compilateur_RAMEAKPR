/* Exemple de programme dans le langage source.
 * Attention: pour l'instant seuls les aspects lexicaux et
 * syntaxiques ont ete verifies automatiquement.
 */
class Point(xc: Integer, yc: Integer)
      { x := xc; y := yc; cpt := cpt+1;}  /* Corps du constructeur */
is 
{
  var static cpt : Integer := 1 <> 2; /* initialisee au lancement du programme */
  var x: Integer := 4 < 5;
  var y: Integer:= 4 >= 5;
  var name: String := "x" & cpt.toString();

  def setName(s: String) returns Void { name := s; } /* bloc procedural */

  def move(dx: Integer, dy: Integer) returns Point { /* bloc fonctionnel */
      x := x + dx; y := y + dy; yield this
  }

  def gety() returns Integer := this.y    /* avec this explicite */ 

  def getx() returns Integer := x         /* avec this implicite */  

  def getxBis() returns Integer { yield x }  /* autre forme */  

  /* troisieme forme, incorrecte du point de vue des types puisqu'il
   * y a un "yield void" implicite.
   */  
  def getxTer() returns Integer { return x; }

  def nothing() returns Void { }

  def nothingBis() returns Void { return void; }

  def nothingTer() returns Void { yield void }

  def print() returns Void {
      /* Exemples avec l'operateur & de concatenation de chaines */
      ( "[" & name & "]" ).print();
      ( "= (" & x.toString() & ", " & y.toString() & ")" ).println();
  }

}

{ 
}
